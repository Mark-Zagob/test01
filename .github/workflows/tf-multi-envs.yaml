name: Terraform Workflow

on:
  # Trigger on manual workflow dispatch
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run (prep or qa)"
        required: true
        default: "prep"

jobs:
  terraform:
    runs-on:
      labels: arc-runner-001

    steps:
      # Step 1: Checkout the code

      # - name: Checkout main repository
      #   uses: actions/checkout@v4

      - name: Checkout terraform repository
        uses: actions/checkout@v4
        with:
          repository: Mark-Zagob/samples-tf-aws
          ref: main
          #path: terraform_codes

      # setup nodejs
      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # setup terraform  
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5


      # Step 2: Set environment variable based on input or branch
      - name: Set Environment
        id: set-env
        run: |
          echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_ENV


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      # - name: Add profile credentials to ~/.aws/credentials
      #   run: |
      #     aws configure set aws_access_key_id ${{ secrets.YOUR_ACCESS_KEY }} --profile default
      #     aws configure set aws_secret_access_key ${{ secrets.YOUR_SECRET_ACCESS_KEY }} --profile default
        
      # Step 3: Configure Terraform environment (e.g., credentials)
      # - name: Set Terraform Credentials
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: echo "AWS credentials set."

      - name: check location
        run: pwd && ls -la

      # - name: check files inside terraform repos
      #   working-directory: terraform_codes
      #   run: pwd && ls -la

      # Step 4: Initialize Terraform in the specific environment
      - name: Terraform Init
        working-directory: live/${{ env.environment }}
        run: terraform init


      # Step 5: Terraform Plan
      - name: Terraform Plan
        working-directory: live/${{ env.environment }}
        run: terraform plan
        # env:
        #   AWS_PROFILE: default
        #   AWS_REGION: ap-southeast-2

      # Step 6: Terraform Apply
      - name: Terraform Apply
        working-directory: live/${{ env.environment }}
        run: terraform apply --auto-approve
