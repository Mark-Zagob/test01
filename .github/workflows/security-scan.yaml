name: security scan
on:
#   push:
#     branches:
#       - main
#   pull_request:
  workflow_dispatch:
permissions:
  security-events: write
  contents: read
jobs:
  repos-scan:
    name: repos-scan
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: triy scan repo 
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'repo-report.sarif'
          severity: 'CRITICAL'

      - name: check file
        run: |
          ls -la

      # - name: Upload code report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: repo-report
      #     path: ./repo-report.sarif
    
      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: 'repo-report.sarif'
      #     category: repo-report
  image-scan:
    name: image-scan
    runs-on: ubuntu-24.04
    needs: repos-scan
    # container:
    #   image: dzagob/debian:custom-tools-v7  # Container agent của bạn
    #   options: --privileged  # Bắt buộc để sử dụng DinD
    #   volumes: 
    #     - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and scan image
        working-directory: ./python_codes/
        run: |
            docker build -t dzagob/python_app:flask-test .

    
      - name: trivy scan image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'dzagob/python_app:flask-test'
          format: 'json'
          ignore-unfixed: true
          vuln-type: 'os,library'
          output: 'image-report.json'
          severity: 'CRITICAL,HIGH'

      - name: check files
        run: |
            ls -la

      # - name: upload artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: trivy-report
      #     path: ./image-report.json
  
      # - name: Generate and display vulnerability report
      #   run: |
      #     sudo apt-get install -y jq
      #     critical_count=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity == "CRITICAL")] | length' image-report.json)
      #     high_count=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity == "HIGH")] | length' image-report.json)

      #     if [ "$critical_count" -gt 0 ] || [ "$high_count" -gt 0 ]; then
      #       echo "##[error]Found $critical_count CRITICAL and $high_count HIGH vulnerabilities"
      #       exit 1
      #     else
      #       echo "##[group]Vulnerability Report"
      #     fi
    #   - name: Upload Trivy scan results to GitHub Security tab
    #     uses: github/codeql-action/upload-sarif@v3
    #     with:
    #       sarif_file: 'trivy-results.sarif'
    #       category: trivy-scan